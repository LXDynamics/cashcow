version: '3.8'

services:
  cashcow:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=production
    container_name: cashcow_app
    ports:
      - "8000:8000"
    environment:
      - DEVELOPMENT_MODE=false
      - DATABASE_URL=${DATABASE_URL:-postgresql://cashcow:password@postgres:5432/cashcow}
      - CASHCOW_CONFIG_DIR=/app/config
      - CASHCOW_ENTITIES_DIR=/app/entities
      - CASHCOW_SCENARIOS_DIR=/app/scenarios
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://cashcow.example.com}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WORKERS=${WORKERS:-4}
    volumes:
      - ./entities:/app/entities
      - ./config:/app/config
      - ./scenarios:/app/scenarios
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
    restart: always
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: cashcow_postgres
    environment:
      - POSTGRES_DB=cashcow
      - POSTGRES_USER=cashcow
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cashcow"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cashcow_redis
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  nginx:
    image: nginx:alpine
    container_name: cashcow_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./src/cashcow/web/frontend/build:/usr/share/nginx/html:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - cashcow
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: cashcow_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: cashcow_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    restart: always

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: