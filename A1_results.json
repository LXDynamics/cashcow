{"created": 1752160619.1070836, "duration": 0.7239258289337158, "exitcode": 1, "root": "/home/alex/cashcow", "environment": {}, "summary": {"passed": 32, "failed": 17, "total": 49, "collected": 49}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py", "type": "Module"}]}, {"nodeid": "tests/test_models.py::TestBaseEntity", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestBaseEntity::test_basic_entity_creation", "type": "Function", "lineno": 13}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_entity_with_end_date", "type": "Function", "lineno": 26}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_entity_with_tags", "type": "Function", "lineno": 36}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_date_parsing_from_string", "type": "Function", "lineno": 46}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_extra_fields_allowed", "type": "Function", "lineno": 57}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_is_active_no_end_date", "type": "Function", "lineno": 69}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_is_active_with_end_date", "type": "Function", "lineno": 79}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_get_field_access", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/test_models.py::TestEmployee", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestEmployee::test_employee_creation", "type": "Function", "lineno": 105}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_with_equity", "type": "Function", "lineno": 119}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_with_benefits", "type": "Function", "lineno": 135}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_total_cost_calculation", "type": "Function", "lineno": 149}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_invalid_pay_frequency", "type": "Function", "lineno": 168}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_negative_salary", "type": "Function", "lineno": 178}]}, {"nodeid": "tests/test_models.py::TestGrant", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestGrant::test_grant_creation", "type": "Function", "lineno": 190}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_with_milestones", "type": "Function", "lineno": 204}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_milestone_validation", "type": "Function", "lineno": 221}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_negative_amount", "type": "Function", "lineno": 238}]}, {"nodeid": "tests/test_models.py::TestInvestment", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestInvestment::test_investment_creation", "type": "Function", "lineno": 250}, {"nodeid": "tests/test_models.py::TestInvestment::test_investment_with_disbursement_schedule", "type": "Function", "lineno": 264}, {"nodeid": "tests/test_models.py::TestInvestment::test_investment_equity_details", "type": "Function", "lineno": 280}]}, {"nodeid": "tests/test_models.py::TestSale", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestSale::test_sale_creation", "type": "Function", "lineno": 298}, {"nodeid": "tests/test_models.py::TestSale::test_sale_with_payment_schedule", "type": "Function", "lineno": 312}, {"nodeid": "tests/test_models.py::TestSale::test_sale_with_products", "type": "Function", "lineno": 329}]}, {"nodeid": "tests/test_models.py::TestService", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestService::test_service_creation", "type": "Function", "lineno": 345}, {"nodeid": "tests/test_models.py::TestService::test_service_monthly_revenue", "type": "Function", "lineno": 359}, {"nodeid": "tests/test_models.py::TestService::test_service_with_contract_value", "type": "Function", "lineno": 371}]}, {"nodeid": "tests/test_models.py::TestFacility", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestFacility::test_facility_creation", "type": "Function", "lineno": 386}, {"nodeid": "tests/test_models.py::TestFacility::test_facility_with_utilities", "type": "Function", "lineno": 400}, {"nodeid": "tests/test_models.py::TestFacility::test_facility_square_footage", "type": "Function", "lineno": 413}]}, {"nodeid": "tests/test_models.py::TestSoftware", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestSoftware::test_software_creation", "type": "Function", "lineno": 428}, {"nodeid": "tests/test_models.py::TestSoftware::test_software_subscription", "type": "Function", "lineno": 442}, {"nodeid": "tests/test_models.py::TestSoftware::test_software_with_maintenance", "type": "Function", "lineno": 456}]}, {"nodeid": "tests/test_models.py::TestEquipment", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestEquipment::test_equipment_creation", "type": "Function", "lineno": 473}, {"nodeid": "tests/test_models.py::TestEquipment::test_equipment_with_depreciation", "type": "Function", "lineno": 487}, {"nodeid": "tests/test_models.py::TestEquipment::test_equipment_with_maintenance", "type": "Function", "lineno": 505}]}, {"nodeid": "tests/test_models.py::TestProject", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestProject::test_project_creation", "type": "Function", "lineno": 522}, {"nodeid": "tests/test_models.py::TestProject::test_project_with_milestones", "type": "Function", "lineno": 535}, {"nodeid": "tests/test_models.py::TestProject::test_project_budget_utilization", "type": "Function", "lineno": 553}, {"nodeid": "tests/test_models.py::TestProject::test_project_health_score", "type": "Function", "lineno": 566}]}, {"nodeid": "tests/test_models.py::TestEntityFactory", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestEntityFactory::test_create_employee", "type": "Function", "lineno": 585}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_grant", "type": "Function", "lineno": 599}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_investment", "type": "Function", "lineno": 613}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_unknown_type", "type": "Function", "lineno": 627}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_with_invalid_data", "type": "Function", "lineno": 638}]}, {"nodeid": "tests/test_models.py::TestEntityValidation", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestEntityValidation::test_start_date_before_end_date", "type": "Function", "lineno": 652}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_required_fields_validation", "type": "Function", "lineno": 661}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_field_type_validation", "type": "Function", "lineno": 670}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_enum_validation", "type": "Function", "lineno": 680}]}, {"nodeid": "tests/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/test_models.py::TestBaseEntity", "type": "Class"}, {"nodeid": "tests/test_models.py::TestEmployee", "type": "Class"}, {"nodeid": "tests/test_models.py::TestGrant", "type": "Class"}, {"nodeid": "tests/test_models.py::TestInvestment", "type": "Class"}, {"nodeid": "tests/test_models.py::TestSale", "type": "Class"}, {"nodeid": "tests/test_models.py::TestService", "type": "Class"}, {"nodeid": "tests/test_models.py::TestFacility", "type": "Class"}, {"nodeid": "tests/test_models.py::TestSoftware", "type": "Class"}, {"nodeid": "tests/test_models.py::TestEquipment", "type": "Class"}, {"nodeid": "tests/test_models.py::TestProject", "type": "Class"}, {"nodeid": "tests/test_models.py::TestEntityFactory", "type": "Class"}, {"nodeid": "tests/test_models.py::TestEntityValidation", "type": "Class"}]}], "tests": [{"nodeid": "tests/test_models.py::TestBaseEntity::test_basic_entity_creation", "lineno": 13, "outcome": "passed", "keywords": ["test_basic_entity_creation", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0007249140035128221, "outcome": "passed"}, "call": {"duration": 0.0004625169967766851, "outcome": "passed"}, "teardown": {"duration": 0.0002468899983796291, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_entity_with_end_date", "lineno": 26, "outcome": "passed", "keywords": ["test_entity_with_end_date", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001934040046762675, "outcome": "passed"}, "call": {"duration": 0.0002724470032262616, "outcome": "passed"}, "teardown": {"duration": 0.00014852399908704683, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_entity_with_tags", "lineno": 36, "outcome": "passed", "keywords": ["test_entity_with_tags", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001804330022423528, "outcome": "passed"}, "call": {"duration": 0.00020394899911480024, "outcome": "passed"}, "teardown": {"duration": 0.00013576100172940642, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_date_parsing_from_string", "lineno": 46, "outcome": "passed", "keywords": ["test_date_parsing_from_string", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001895340028568171, "outcome": "passed"}, "call": {"duration": 0.0002813419996527955, "outcome": "passed"}, "teardown": {"duration": 0.0001765609995345585, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_extra_fields_allowed", "lineno": 57, "outcome": "passed", "keywords": ["test_extra_fields_allowed", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001943320021382533, "outcome": "passed"}, "call": {"duration": 0.00029313100094441324, "outcome": "passed"}, "teardown": {"duration": 0.00015415100642712787, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_is_active_no_end_date", "lineno": 69, "outcome": "passed", "keywords": ["test_is_active_no_end_date", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00016126999980770051, "outcome": "passed"}, "call": {"duration": 0.0002301420026924461, "outcome": "passed"}, "teardown": {"duration": 0.00013086100079817697, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_is_active_with_end_date", "lineno": 79, "outcome": "passed", "keywords": ["test_is_active_with_end_date", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00016233899805229157, "outcome": "passed"}, "call": {"duration": 0.00025039799947990105, "outcome": "passed"}, "teardown": {"duration": 0.00013522100198315457, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestBaseEntity::test_get_field_access", "lineno": 91, "outcome": "passed", "keywords": ["test_get_field_access", "TestBaseEntity", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001737749989842996, "outcome": "passed"}, "call": {"duration": 0.00024005000159377232, "outcome": "passed"}, "teardown": {"duration": 0.00014146899775369093, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_creation", "lineno": 105, "outcome": "passed", "keywords": ["test_employee_creation", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001753329997882247, "outcome": "passed"}, "call": {"duration": 0.00024580700119258836, "outcome": "passed"}, "teardown": {"duration": 0.00028783099696738645, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_with_equity", "lineno": 119, "outcome": "passed", "keywords": ["test_employee_with_equity", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002057329984381795, "outcome": "passed"}, "call": {"duration": 0.00023878800129750744, "outcome": "passed"}, "teardown": {"duration": 0.00013992100139148533, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_with_benefits", "lineno": 135, "outcome": "passed", "keywords": ["test_employee_with_benefits", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00017466599820181727, "outcome": "passed"}, "call": {"duration": 0.0002570889992057346, "outcome": "passed"}, "teardown": {"duration": 0.00013703199510928243, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_total_cost_calculation", "lineno": 149, "outcome": "failed", "keywords": ["test_employee_total_cost_calculation", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00017542899877298623, "outcome": "passed"}, "call": {"duration": 0.00026909099688054994, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/src/cashcow/models/base.py", "lineno": 49, "message": "TypeError: '>' not supported between instances of 'datetime.date' and 'dict'"}, "traceback": [{"path": "tests/test_models.py", "lineno": 163, "message": "in test_employee_total_cost_calculation"}, {"path": "src/cashcow/models/entities.py", "lineno": 39, "message": "in calculate_total_cost"}, {"path": "src/cashcow/models/base.py", "lineno": 49, "message": "in is_active"}], "longrepr": "tests/test_models.py:163: in test_employee_total_cost_calculation\n    total_cost = employee.calculate_total_cost(context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/cashcow/models/entities.py:39: in calculate_total_cost\n    if not self.is_active(as_of_date):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/cashcow/models/base.py:49: in is_active\n    if self.start_date > as_of_date:\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: '>' not supported between instances of 'datetime.date' and 'dict'"}, "teardown": {"duration": 0.00026975799846695736, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_invalid_pay_frequency", "lineno": 168, "outcome": "failed", "keywords": ["test_employee_invalid_pay_frequency", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002570689975982532, "outcome": "passed"}, "call": {"duration": 0.0005430970049928874, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 170, "message": "Failed: DID NOT RAISE <class 'ValueError'>"}, "traceback": [{"path": "tests/test_models.py", "lineno": 170, "message": "in test_employee_invalid_pay_frequency"}], "longrepr": "tests/test_models.py:170: in test_employee_invalid_pay_frequency\n    with pytest.raises(ValueError):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\nE   Failed: DID NOT RAISE <class 'ValueError'>"}, "teardown": {"duration": 0.00023158599651651457, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEmployee::test_employee_negative_salary", "lineno": 178, "outcome": "passed", "keywords": ["test_employee_negative_salary", "TestEmployee", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00033381599496351555, "outcome": "passed"}, "call": {"duration": 0.00039014800131553784, "outcome": "passed"}, "teardown": {"duration": 0.00017116299568442628, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_creation", "lineno": 190, "outcome": "passed", "keywords": ["test_grant_creation", "TestGrant", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00023383100051432848, "outcome": "passed"}, "call": {"duration": 0.00027621499611996114, "outcome": "passed"}, "teardown": {"duration": 0.0001603920027264394, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_with_milestones", "lineno": 204, "outcome": "passed", "keywords": ["test_grant_with_milestones", "TestGrant", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002045050059678033, "outcome": "passed"}, "call": {"duration": 0.0002643839980009943, "outcome": "passed"}, "teardown": {"duration": 0.00015742899995530024, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_milestone_validation", "lineno": 221, "outcome": "failed", "keywords": ["test_grant_milestone_validation", "TestGrant", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00020017100177938119, "outcome": "passed"}, "call": {"duration": 0.00030591000540880486, "outcome": "failed", "crash": {"path": "/home/alex/.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "AttributeError: 'Grant' object has no attribute 'validate_milestones'"}, "traceback": [{"path": "tests/test_models.py", "lineno": 237, "message": "in test_grant_milestone_validation"}, {"path": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "in __getattr__"}], "longrepr": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:983: in __getattr__\n    return pydantic_extra[item]\n           ^^^^^^^^^^^^^^^^^^^^\nE   KeyError: 'validate_milestones'\n\nThe above exception was the direct cause of the following exception:\ntests/test_models.py:237: in test_grant_milestone_validation\n    grant.validate_milestones()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\n../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:985: in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\nE   AttributeError: 'Grant' object has no attribute 'validate_milestones'"}, "teardown": {"duration": 0.00025579000066500157, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestGrant::test_grant_negative_amount", "lineno": 238, "outcome": "passed", "keywords": ["test_grant_negative_amount", "TestGrant", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002141090008080937, "outcome": "passed"}, "call": {"duration": 0.00032723500044085085, "outcome": "passed"}, "teardown": {"duration": 0.00017109300097217783, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestInvestment::test_investment_creation", "lineno": 250, "outcome": "passed", "keywords": ["test_investment_creation", "TestInvestment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002456250003888272, "outcome": "passed"}, "call": {"duration": 0.0002682699996512383, "outcome": "passed"}, "teardown": {"duration": 0.0001528350039734505, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestInvestment::test_investment_with_disbursement_schedule", "lineno": 264, "outcome": "passed", "keywords": ["test_investment_with_disbursement_schedule", "TestInvestment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001891470019472763, "outcome": "passed"}, "call": {"duration": 0.0002568280033301562, "outcome": "passed"}, "teardown": {"duration": 0.00021174400171730667, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestInvestment::test_investment_equity_details", "lineno": 280, "outcome": "passed", "keywords": ["test_investment_equity_details", "TestInvestment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00024181500339182094, "outcome": "passed"}, "call": {"duration": 0.0002821360030793585, "outcome": "passed"}, "teardown": {"duration": 0.00015696699847467244, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSale::test_sale_creation", "lineno": 298, "outcome": "passed", "keywords": ["test_sale_creation", "TestSale", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00019214899657526985, "outcome": "passed"}, "call": {"duration": 0.00024213099823100492, "outcome": "passed"}, "teardown": {"duration": 0.00015130799874896184, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSale::test_sale_with_payment_schedule", "lineno": 312, "outcome": "passed", "keywords": ["test_sale_with_payment_schedule", "TestSale", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00035749500239035115, "outcome": "passed"}, "call": {"duration": 0.00042232499981764704, "outcome": "passed"}, "teardown": {"duration": 0.00014362700312631205, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSale::test_sale_with_products", "lineno": 329, "outcome": "passed", "keywords": ["test_sale_with_products", "TestSale", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001939389985636808, "outcome": "passed"}, "call": {"duration": 0.0003003470046678558, "outcome": "passed"}, "teardown": {"duration": 0.00015937800344545394, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestService::test_service_creation", "lineno": 345, "outcome": "failed", "keywords": ["test_service_creation", "TestService", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00016825000056996942, "outcome": "passed"}, "call": {"duration": 0.0002819869987433776, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 347, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nmonthly_amount\n  Field required [type=missing, input_value={'type': 'service', 'name..., 'hours_per_month': 40}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 347, "message": "in test_service_creation"}], "longrepr": "tests/test_models.py:347: in test_service_creation\n    service = Service(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nE   monthly_amount\nE     Field required [type=missing, input_value={'type': 'service', 'name..., 'hours_per_month': 40}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00017859600484371185, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestService::test_service_monthly_revenue", "lineno": 359, "outcome": "failed", "keywords": ["test_service_monthly_revenue", "TestService", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001998289953917265, "outcome": "passed"}, "call": {"duration": 0.00024369200400542468, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 361, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nmonthly_amount\n  Field required [type=missing, input_value={'type': 'service', 'name..., 'hours_per_month': 40}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 361, "message": "in test_service_monthly_revenue"}], "longrepr": "tests/test_models.py:361: in test_service_monthly_revenue\n    service = Service(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nE   monthly_amount\nE     Field required [type=missing, input_value={'type': 'service', 'name..., 'hours_per_month': 40}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00022099500347394496, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestService::test_service_with_contract_value", "lineno": 371, "outcome": "failed", "keywords": ["test_service_with_contract_value", "TestService", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0005362559968489222, "outcome": "passed"}, "call": {"duration": 0.0003382170034456067, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 373, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nmonthly_amount\n  Field required [type=missing, input_value={'type': 'service', 'name...contract_value': 120000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 373, "message": "in test_service_with_contract_value"}], "longrepr": "tests/test_models.py:373: in test_service_with_contract_value\n    service = Service(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Service\nE   monthly_amount\nE     Field required [type=missing, input_value={'type': 'service', 'name...contract_value': 120000}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.0002937680037575774, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestFacility::test_facility_creation", "lineno": 386, "outcome": "passed", "keywords": ["test_facility_creation", "TestFacility", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002590000003692694, "outcome": "passed"}, "call": {"duration": 0.0003454469988355413, "outcome": "passed"}, "teardown": {"duration": 0.00019746500038309023, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestFacility::test_facility_with_utilities", "lineno": 400, "outcome": "failed", "keywords": ["test_facility_with_utilities", "TestFacility", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002661969992914237, "outcome": "passed"}, "call": {"duration": 0.0003064990014536306, "outcome": "failed", "crash": {"path": "/home/alex/.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "AttributeError: 'Facility' object has no attribute 'calculate_total_monthly_cost'. Did you mean: 'calculate_monthly_cost'?"}, "traceback": [{"path": "tests/test_models.py", "lineno": 411, "message": "in test_facility_with_utilities"}, {"path": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "in __getattr__"}], "longrepr": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:983: in __getattr__\n    return pydantic_extra[item]\n           ^^^^^^^^^^^^^^^^^^^^\nE   KeyError: 'calculate_total_monthly_cost'\n\nThe above exception was the direct cause of the following exception:\ntests/test_models.py:411: in test_facility_with_utilities\n    total_cost = facility.calculate_total_monthly_cost()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:985: in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\nE   AttributeError: 'Facility' object has no attribute 'calculate_total_monthly_cost'. Did you mean: 'calculate_monthly_cost'?"}, "teardown": {"duration": 0.0002891609983635135, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestFacility::test_facility_square_footage", "lineno": 413, "outcome": "failed", "keywords": ["test_facility_square_footage", "TestFacility", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00021703600214095786, "outcome": "passed"}, "call": {"duration": 0.00028502299392130226, "outcome": "failed", "crash": {"path": "/home/alex/.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "AttributeError: 'Facility' object has no attribute 'calculate_cost_per_sqft'"}, "traceback": [{"path": "tests/test_models.py", "lineno": 424, "message": "in test_facility_square_footage"}, {"path": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py", "lineno": 985, "message": "in __getattr__"}], "longrepr": "../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:983: in __getattr__\n    return pydantic_extra[item]\n           ^^^^^^^^^^^^^^^^^^^^\nE   KeyError: 'calculate_cost_per_sqft'\n\nThe above exception was the direct cause of the following exception:\ntests/test_models.py:424: in test_facility_square_footage\n    cost_per_sqft = facility.calculate_cost_per_sqft()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../.cache/pypoetry/virtualenvs/cashcow-9bHuWBgr-py3.13/lib/python3.13/site-packages/pydantic/main.py:985: in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\nE   AttributeError: 'Facility' object has no attribute 'calculate_cost_per_sqft'"}, "teardown": {"duration": 0.0002802119997795671, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSoftware::test_software_creation", "lineno": 428, "outcome": "failed", "keywords": ["test_software_creation", "TestSoftware", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00025295299565186724, "outcome": "passed"}, "call": {"duration": 0.00033553999674040824, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 430, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Software\nmonthly_cost\n  Field required [type=missing, input_value={'type': 'software', 'nam...0, 'vendor': 'CAD Corp'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 430, "message": "in test_software_creation"}], "longrepr": "tests/test_models.py:430: in test_software_creation\n    software = Software(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Software\nE   monthly_cost\nE     Field required [type=missing, input_value={'type': 'software', 'nam...0, 'vendor': 'CAD Corp'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.0002758030022960156, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSoftware::test_software_subscription", "lineno": 442, "outcome": "passed", "keywords": ["test_software_subscription", "TestSoftware", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00021493299573194236, "outcome": "passed"}, "call": {"duration": 0.0002402359968982637, "outcome": "passed"}, "teardown": {"duration": 0.00012944699847139418, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestSoftware::test_software_with_maintenance", "lineno": 456, "outcome": "failed", "keywords": ["test_software_with_maintenance", "TestSoftware", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00016070799756562337, "outcome": "passed"}, "call": {"duration": 0.0002459880051901564, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 458, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Software\nmonthly_cost\n  Field required [type=missing, input_value={'type': 'software', 'nam...pport_level': 'premium'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 458, "message": "in test_software_with_maintenance"}], "longrepr": "tests/test_models.py:458: in test_software_with_maintenance\n    software = Software(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Software\nE   monthly_cost\nE     Field required [type=missing, input_value={'type': 'software', 'nam...pport_level': 'premium'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.0002032429983955808, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEquipment::test_equipment_creation", "lineno": 473, "outcome": "failed", "keywords": ["test_equipment_creation", "TestEquipment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00021687999833375216, "outcome": "passed"}, "call": {"duration": 0.0002586030022939667, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 475, "message": "pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\ncost\n  Field required [type=missing, input_value={'type': 'equipment', 'na...vendor': 'Machine Corp'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\npurchase_date\n  Field required [type=missing, input_value={'type': 'equipment', 'na...vendor': 'Machine Corp'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 475, "message": "in test_equipment_creation"}], "longrepr": "tests/test_models.py:475: in test_equipment_creation\n    equipment = Equipment(\nE   pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\nE   cost\nE     Field required [type=missing, input_value={'type': 'equipment', 'na...vendor': 'Machine Corp'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing\nE   purchase_date\nE     Field required [type=missing, input_value={'type': 'equipment', 'na...vendor': 'Machine Corp'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00024312699679285288, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEquipment::test_equipment_with_depreciation", "lineno": 487, "outcome": "failed", "keywords": ["test_equipment_with_depreciation", "TestEquipment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00022686499869450927, "outcome": "passed"}, "call": {"duration": 0.00030421799601754174, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 489, "message": "pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\ncost\n  Field required [type=missing, input_value={'type': 'equipment', 'na... 'salvage_value': 20000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\npurchase_date\n  Field required [type=missing, input_value={'type': 'equipment', 'na... 'salvage_value': 20000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 489, "message": "in test_equipment_with_depreciation"}], "longrepr": "tests/test_models.py:489: in test_equipment_with_depreciation\n    equipment = Equipment(\nE   pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\nE   cost\nE     Field required [type=missing, input_value={'type': 'equipment', 'na... 'salvage_value': 20000}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing\nE   purchase_date\nE     Field required [type=missing, input_value={'type': 'equipment', 'na... 'salvage_value': 20000}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00021285199909470975, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEquipment::test_equipment_with_maintenance", "lineno": 505, "outcome": "failed", "keywords": ["test_equipment_with_maintenance", "TestEquipment", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0004061860017827712, "outcome": "passed"}, "call": {"duration": 0.0002737929971772246, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 507, "message": "pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\ncost\n  Field required [type=missing, input_value={'type': 'equipment', 'na..._schedule': 'quarterly'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\npurchase_date\n  Field required [type=missing, input_value={'type': 'equipment', 'na..._schedule': 'quarterly'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 507, "message": "in test_equipment_with_maintenance"}], "longrepr": "tests/test_models.py:507: in test_equipment_with_maintenance\n    equipment = Equipment(\nE   pydantic_core._pydantic_core.ValidationError: 2 validation errors for Equipment\nE   cost\nE     Field required [type=missing, input_value={'type': 'equipment', 'na..._schedule': 'quarterly'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing\nE   purchase_date\nE     Field required [type=missing, input_value={'type': 'equipment', 'na..._schedule': 'quarterly'}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00022734400408808142, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestProject::test_project_creation", "lineno": 522, "outcome": "failed", "keywords": ["test_project_creation", "TestProject", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002020479951170273, "outcome": "passed"}, "call": {"duration": 0.0002648170047905296, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 524, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\ntotal_budget\n  Field required [type=missing, input_value={'type': 'project', 'name... 31), 'budget': 1000000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 524, "message": "in test_project_creation"}], "longrepr": "tests/test_models.py:524: in test_project_creation\n    project = Project(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\nE   total_budget\nE     Field required [type=missing, input_value={'type': 'project', 'name... 31), 'budget': 1000000}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00041716899431776255, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestProject::test_project_with_milestones", "lineno": 535, "outcome": "failed", "keywords": ["test_project_with_milestones", "TestProject", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00024582300102338195, "outcome": "passed"}, "call": {"duration": 0.00030538300052285194, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 537, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\ntotal_budget\n  Field required [type=missing, input_value={'type': 'project', 'name...e_date': '2024-12-01'}]}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 537, "message": "in test_project_with_milestones"}], "longrepr": "tests/test_models.py:537: in test_project_with_milestones\n    project = Project(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\nE   total_budget\nE     Field required [type=missing, input_value={'type': 'project', 'name...e_date': '2024-12-01'}]}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.00021515600383281708, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestProject::test_project_budget_utilization", "lineno": 553, "outcome": "failed", "keywords": ["test_project_budget_utilization", "TestProject", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002219340021838434, "outcome": "passed"}, "call": {"duration": 0.00028500200278358534, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 555, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\ntotal_budget\n  Field required [type=missing, input_value={'type': 'project', 'name... 'spent_to_date': 35000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 555, "message": "in test_project_budget_utilization"}], "longrepr": "tests/test_models.py:555: in test_project_budget_utilization\n    project = Project(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\nE   total_budget\nE     Field required [type=missing, input_value={'type': 'project', 'name... 'spent_to_date': 35000}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.0003110370016656816, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestProject::test_project_health_score", "lineno": 566, "outcome": "failed", "keywords": ["test_project_health_score", "TestProject", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002543989976402372, "outcome": "passed"}, "call": {"duration": 0.0003360620030434802, "outcome": "failed", "crash": {"path": "/home/alex/cashcow/tests/test_models.py", "lineno": 568, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\ntotal_budget\n  Field required [type=missing, input_value={'type': 'project', 'name...', 'completed': False}]}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "traceback": [{"path": "tests/test_models.py", "lineno": 568, "message": "in test_project_health_score"}], "longrepr": "tests/test_models.py:568: in test_project_health_score\n    project = Project(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Project\nE   total_budget\nE     Field required [type=missing, input_value={'type': 'project', 'name...', 'completed': False}]}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing"}, "teardown": {"duration": 0.0002806289994623512, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_employee", "lineno": 585, "outcome": "passed", "keywords": ["test_create_employee", "TestEntityFactory", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00025206599821103737, "outcome": "passed"}, "call": {"duration": 0.0003199929997208528, "outcome": "passed"}, "teardown": {"duration": 0.00028130300051998347, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_grant", "lineno": 599, "outcome": "passed", "keywords": ["test_create_grant", "TestEntityFactory", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002431519969832152, "outcome": "passed"}, "call": {"duration": 0.00030233800498535857, "outcome": "passed"}, "teardown": {"duration": 0.0001592679982422851, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_investment", "lineno": 613, "outcome": "passed", "keywords": ["test_create_investment", "TestEntityFactory", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00029924599948571995, "outcome": "passed"}, "call": {"duration": 0.00030809600139036775, "outcome": "passed"}, "teardown": {"duration": 0.00018400800036033615, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_unknown_type", "lineno": 627, "outcome": "passed", "keywords": ["test_create_unknown_type", "TestEntityFactory", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00020300100004533306, "outcome": "passed"}, "call": {"duration": 0.0002792679952108301, "outcome": "passed"}, "teardown": {"duration": 0.00015875499957473949, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityFactory::test_create_with_invalid_data", "lineno": 638, "outcome": "passed", "keywords": ["test_create_with_invalid_data", "TestEntityFactory", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00021586300135822967, "outcome": "passed"}, "call": {"duration": 0.00028630699671339244, "outcome": "passed"}, "teardown": {"duration": 0.0001584879937581718, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_start_date_before_end_date", "lineno": 652, "outcome": "passed", "keywords": ["test_start_date_before_end_date", "TestEntityValidation", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00019987000268884003, "outcome": "passed"}, "call": {"duration": 0.0002608599970699288, "outcome": "passed"}, "teardown": {"duration": 0.00015249200077960268, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_required_fields_validation", "lineno": 661, "outcome": "passed", "keywords": ["test_required_fields_validation", "TestEntityValidation", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0001911530052893795, "outcome": "passed"}, "call": {"duration": 0.00025020100292749703, "outcome": "passed"}, "teardown": {"duration": 0.00015658199845347553, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_field_type_validation", "lineno": 670, "outcome": "passed", "keywords": ["test_field_type_validation", "TestEntityValidation", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.00019328700000187382, "outcome": "passed"}, "call": {"duration": 0.00025156500487355515, "outcome": "passed"}, "teardown": {"duration": 0.00014931400073692203, "outcome": "passed"}}, {"nodeid": "tests/test_models.py::TestEntityValidation::test_enum_validation", "lineno": 680, "outcome": "passed", "keywords": ["test_enum_validation", "TestEntityValidation", "test_models.py", "tests", "cashcow", ""], "setup": {"duration": 0.0002226229989901185, "outcome": "passed"}, "call": {"duration": 0.0002557949992478825, "outcome": "passed"}, "teardown": {"duration": 0.0002217390065197833, "outcome": "passed"}}]}